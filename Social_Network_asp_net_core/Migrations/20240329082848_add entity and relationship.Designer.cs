// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Social_Network_asp_net_core.Entities.MyDbContext;

#nullable disable

namespace Social_Network_asp_net_core.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240329082848_add entity and relationship")]
    partial class addentityandrelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Comment", b =>
                {
                    b.Property<long>("idComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idComment"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("idCommenter")
                        .HasColumnType("bigint");

                    b.Property<long>("idTweet")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("timestamp"));

                    b.HasKey("idComment");

                    b.HasIndex("idTweet");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Location", b =>
                {
                    b.Property<long>("idLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idLocation"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<string>("ward")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("idLocation");

                    b.HasIndex("idUser")
                        .IsUnique();

                    b.ToTable("location");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Love", b =>
                {
                    b.Property<long>("idLove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idLove"));

                    b.Property<long>("idLover")
                        .HasColumnType("bigint");

                    b.Property<long>("idTweet")
                        .HasColumnType("bigint");

                    b.HasKey("idLove");

                    b.HasIndex("idTweet");

                    b.ToTable("love");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Message", b =>
                {
                    b.Property<long>("id_mes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id_mes"));

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<long>("idReciver")
                        .HasColumnType("bigint");

                    b.Property<long>("idSender")
                        .HasColumnType("bigint");

                    b.Property<int>("messType")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("timestamp"));

                    b.HasKey("id_mes");

                    b.ToTable("message");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Notification", b =>
                {
                    b.Property<long>("idNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idNotification"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("idSender")
                        .HasColumnType("bigint");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("timestamp"));

                    b.HasKey("idNotification");

                    b.HasIndex("idUser");

                    b.ToTable("notification");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.RecentMessage", b =>
                {
                    b.Property<long>("idRecentMess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idRecentMess"));

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<long>("idSender")
                        .HasColumnType("bigint");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<int>("messType")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("timestamp"));

                    b.Property<long>("withId")
                        .HasColumnType("bigint");

                    b.HasKey("idRecentMess");

                    b.HasIndex("idUser");

                    b.ToTable("recentMessage");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Tweet", b =>
                {
                    b.Property<long>("idTweet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idTweet"));

                    b.Property<string>("content")
                        .HasColumnType("longtext");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("timestamp"));

                    b.Property<string>("urlImage")
                        .HasColumnType("longtext");

                    b.HasKey("idTweet");

                    b.HasIndex("idUser");

                    b.ToTable("tweet");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.TweetSaved", b =>
                {
                    b.Property<long>("idTSaved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idTSaved"));

                    b.Property<long>("idTweet")
                        .HasColumnType("bigint");

                    b.Property<long>("idUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("timestamp"));

                    b.HasKey("idTSaved");

                    b.HasIndex("idTweet");

                    b.HasIndex("idUser");

                    b.ToTable("TweetSaved");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.User", b =>
                {
                    b.Property<long>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("idUser"));

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("fullName")
                        .HasColumnType("longtext");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("sex")
                        .HasColumnType("int");

                    b.Property<string>("urlAvt")
                        .HasColumnType("longtext");

                    b.Property<string>("urlBackground")
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("idUser");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Comment", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.Tweet", "tweet")
                        .WithMany("comments")
                        .HasForeignKey("idTweet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tweet");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Location", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.User", "user")
                        .WithOne("location")
                        .HasForeignKey("Social_Network_asp_net_core.Entities.Location", "idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Love", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.Tweet", "tweet")
                        .WithMany("loves")
                        .HasForeignKey("idTweet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tweet");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Notification", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.User", "user")
                        .WithMany("notifications")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.RecentMessage", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.User", "user")
                        .WithMany("recentMessages")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Tweet", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.User", "user")
                        .WithMany("tweets")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.TweetSaved", b =>
                {
                    b.HasOne("Social_Network_asp_net_core.Entities.Tweet", "tweet")
                        .WithMany("tweetSaveds")
                        .HasForeignKey("idTweet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Social_Network_asp_net_core.Entities.User", "user")
                        .WithMany("tweetSaveds")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tweet");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.Tweet", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("loves");

                    b.Navigation("tweetSaveds");
                });

            modelBuilder.Entity("Social_Network_asp_net_core.Entities.User", b =>
                {
                    b.Navigation("location")
                        .IsRequired();

                    b.Navigation("notifications");

                    b.Navigation("recentMessages");

                    b.Navigation("tweetSaveds");

                    b.Navigation("tweets");
                });
#pragma warning restore 612, 618
        }
    }
}
